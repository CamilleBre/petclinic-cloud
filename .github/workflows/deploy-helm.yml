# CI/CD PetClinic => Build et push sur ECR

name: Petclinic > CI/CD > Github Actions
# mise en place du Trigger
on:
  # Push ou Pull Request sur @master
  push:
    branches: [feature-*]
  pull_request:
    branches: [feature-*]

env:
  REPOSITORY_PREFIX: 885801475464.dkr.ecr.eu-west-3.amazonaws.com/ecr-petclinic
  NAMESPACE: dev
  AWS_EC2_METADATA_DISABLED: true


# lancement des Jobs
jobs:
  build:
    # Configuration de l'environnement
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['17']
    steps:
    - uses: actions/checkout@v3
    - name: Run a one-line script
      run: echo "build DOCKER images!"

    - name: Build images with maven
      # Build des images avec maven
      run: |
        mvn spring-boot:build-image -Pk8s -DREPOSITORY_PREFIX=${REPOSITORY_PREFIX}


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push docker images
      run: |
        docker images
        docker push $REPOSITORY_PREFIX:spring-petclinic-cloud-api-gateway
        docker push $REPOSITORY_PREFIX:spring-petclinic-cloud-visits-service
        docker push $REPOSITORY_PREFIX:spring-petclinic-cloud-vets-service
        docker push $REPOSITORY_PREFIX:spring-petclinic-cloud-customers-service
        #docker push $REPOSITORY_PREFIX:spring-petclinic-cloud-admin-server
        #docker push $REPOSITORY_PREFIX:spring-petclinic-cloud-discovery-service
        #docker push $REPOSITORY_PREFIX/:spring-petclinic-cloud-config-server

  deploy-to-eks:
    name: "Build and Push to EKS"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update kube config
      run: |
        aws eks update-kubeconfig --name eks-petclinic

    - name: Create namespace
      run: "kubectl create namespace dev \n#magic___^_^___line\n"
    - name: Create databases
      run: |
        bash ./scripts/database_creation.sh

    - name: Deploy Helm
      uses: bitovi/github-actions-deploy-eks-helm@v1.2.4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3
        cluster-name: eks-petclinic
        config-files: helm/values.yaml
        chart-path: helm
        namespace: dev
        name: dev-chart



    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: eu-west-3


    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1


    #- name: Update kube config
    #  run: |
    #    aws eks update-kubeconfig --name eks-petclinic

    ## Deploy with helm 
    #- name: Deploy helm charts
    #  run: "helm upgrade --install  dev-chart ./helm --values=./helm/values.yaml --namespace dev --create-namespace \n"
